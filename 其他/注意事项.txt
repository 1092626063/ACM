！！！！！！！！！！！

1.注意精度问题,尤其是过程中的精度问题，
例如int * int的值大于LL，即使赋值给LL也会炸
例如(1 << 50)是有问题的，需要(1LL << 50)

2.在交题前一定要重新审视一边整个代码，不要心急交题,记得要测两个小样例和极端样例

3.初始化请务必0~N+1,memset容易被卡,手动初始化容易遗漏边界0等问题,以及init记得在主函数里调用，不要调用在N的输入之前

4.读入挂可以尝试但不要迷信,包括inline和register这样的玄学优化，更加多的去寻找算法本身的问题。

5.SPFA不得已不要用，虽然在有负权边（不只是负环）的时候无法使用Dijkstra,但是如果是一个DAG图，可以考虑拓扑排序求最短路

6.在遇到莫名其妙不知所云的错误的时候（例如一个值好好的莫名其妙就在中途改变了），很有可能是数组溢出之类的错误

7.如果在想dp状态转移方程的时候始终觉得状态太多存不下，找规律又不怎么找得到的时候，要记得有一那么一类题，当你枚举出起始或者初始的有限个状态的时候，可以递推出后面所有的结果，所以只要枚举 + 验证即可，例如知道了石头剪刀布的结果（是谁赢）就可以推出过程的两个状态

8.如果DP完了之后要求记忆路径的操作很麻烦或者很容易出错，可以考虑在DP的过程中就记录当前状态的前驱

9. 先看眼是有向图还是无向图，无向图数组开两倍。

如果题目中没有声明无自环和重边，需要注意

有些遍历的题要考虑环，否则可能死循环，可以使用缩点

如果题目中边权小于等于零，要考虑负环、零环的情况